{"name": "Удаление товара из корзины", "status": "failed", "statusDetails": {"message": "AssertionError: (TimeoutException('', None, None), \"Время ожидания элемента 'css selector = strong .fa.fa-shopping-cart' истекло\")", "trace": "self = <MainPage.MainPage object at 0x000001D36D088648>, locator = ('css selector', 'strong .fa.fa-shopping-cart'), timeout = 2\n\n    def wait_web_element(self, locator, timeout=2):\n        \"\"\"\n        Принимает в качестве аргументов:\n            • локатор веб-элемента,\n            • время ожидания в секундах (timeout).\n            По умолчанию timeout = 2 с.\n        Ожидает появления веб-элемента по указанному локатору на странице в течение timeout секунд.\n        Метод возвращает:\n            веб-элемент, в случае его появления на веб-странице;\n            AssertionError, если веб-элемент не был обнаружен на веб-странице за время ожидания.\n    \n        \"\"\"\n        self.logger.info('Waiting for the element {} within {} seconds'.format(locator, timeout))\n        try:\n>           el = WebDriverWait(self.browser, timeout).until(EC.visibility_of_element_located(locator))\n\nBaseClass.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0c0c7ab6843c38fe9d5a4a06ca35486e\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001D36D11E1C8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python_3.7.9\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c0c7ab6843c38fe9d5a4a06ca35486e\")>, base_url = 'http://172.19.16.142/'\n\n    @allure.title(\"Удаление товара из корзины\")\n    def test_delete_from_cart(browser, base_url):\n        mp_actions = MainPage(browser)\n        mp_actions.go_to_mainpage(base_url)\n        add_to_cart = mp_actions.find_all_specified_elements(mp_actions.ADD_TO_CART)\n        add_to_cart[1].click()\n        mp_actions.wait_web_element(mp_actions.CART_BUTTON).click()\n>       mp_actions.wait_web_element(mp_actions.VIEW_CART).click()\n\ntest_add_prod_to_the_shopping_cart.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MainPage.MainPage object at 0x000001D36D088648>, locator = ('css selector', 'strong .fa.fa-shopping-cart'), timeout = 2\n\n    def wait_web_element(self, locator, timeout=2):\n        \"\"\"\n        Принимает в качестве аргументов:\n            • локатор веб-элемента,\n            • время ожидания в секундах (timeout).\n            По умолчанию timeout = 2 с.\n        Ожидает появления веб-элемента по указанному локатору на странице в течение timeout секунд.\n        Метод возвращает:\n            веб-элемент, в случае его появления на веб-странице;\n            AssertionError, если веб-элемент не был обнаружен на веб-странице за время ожидания.\n    \n        \"\"\"\n        self.logger.info('Waiting for the element {} within {} seconds'.format(locator, timeout))\n        try:\n            el = WebDriverWait(self.browser, timeout).until(EC.visibility_of_element_located(locator))\n        except TimeoutException as time_is_up:\n            self.logger.error(\"Element \\'{} = {}\\' was not found on the page\".format(*locator))\n            self.browser.save_screenshot(self.screenshot_name)\n>           raise AssertionError(time_is_up, \"Время ожидания элемента \\'{} = {}\\' истекло\".format(*locator))\nE           AssertionError: (TimeoutException('', None, None), \"Время ожидания элемента 'css selector = strong .fa.fa-shopping-cart' истекло\")\n\nBaseClass.py:190: AssertionError"}, "attachments": [{"name": "log", "source": "4952e159-91cd-41ce-a456-bdb0024b5d43-attachment.txt", "type": "text/plain"}], "start": 1640266524251, "stop": 1640266527724, "uuid": "8f4e0b82-91fa-4381-84cd-6c060272f8fc", "historyId": "bec296594c1204ff291e76df31939baf", "testCaseId": "50aaaafb2f51b52562fb91817bfa8daf", "fullName": "test_add_prod_to_the_shopping_cart#test_delete_from_cart", "labels": [{"name": "suite", "value": "test_add_prod_to_the_shopping_cart"}, {"name": "host", "value": "sis002422"}, {"name": "thread", "value": "8676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_add_prod_to_the_shopping_cart"}]}