{"name": "Проверка допустимого количества символов в полях ввода", "status": "failed", "statusDetails": {"message": "AssertionError: No message", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f019261e8cfbfe01b46444284246bd2e\")>, base_url = 'http://172.19.16.142/', first_name = 'd', second_name = 't', password = 'e$kWq2i+a&cY9bJtB4OI'\n\n    @allure.title(\"Проверка допустимого количества символов в полях ввода\")\n    @allure.description(\"Проверка граничных условий полей для ввода имени, фамилии и пароля\")\n    @pytest.mark.parametrize(\"first_name\",[UserLoginPage.generate_string(num_of_chars=1),\n                                           UserLoginPage.generate_string(num_of_chars=32, num=True, uppercase=True)])\n    @pytest.mark.parametrize(\"second_name\",[UserLoginPage.generate_string(num_of_chars=1),\n                                           UserLoginPage.generate_string(num_of_chars=32, num=True, uppercase=True)])\n    @pytest.mark.parametrize(\"password\",\n                             [UserLoginPage.generate_string(num_of_chars=4, num=True, uppercase=True, sym=True),\n                              UserLoginPage.generate_string(num_of_chars=20, num=True, uppercase=True, sym=True)])\n    def test_border_conditions(browser, base_url, first_name, second_name, password):\n        new_user = UserLoginPage(browser)\n        new_user.open_reg_account_page(base_url)\n        new_user.fill_in_with_letters(new_user.FIRST_NAME_FIELD, name=first_name)\n        new_user.fill_in_with_letters(new_user.LAST_NAME_FIELD, name=second_name)\n        new_user.enter_email()\n        new_user.enter_telephone()\n        passwd = new_user.enter_password(pwd=password)\n        new_user.fill_in_with_letters(new_user.PASSWORD_CONFIRM_FIELD, name=passwd)\n        new_user.find_web_element(new_user.PRIVACY_POLICY_CHECKBOX).click()\n        new_user.wait_and_click(new_user.SUBMIT_CONTINUE_BUTTON)\n        if new_user.view_success_notification() != \"Your Account Has Been Created!\":\n            browser.save_screenshot(new_user.screenshot_name)\n            new_user.logger.error(\"Account creation message was not displayed \")\n>           raise AssertionError(\"No message\")\nE           AssertionError: No message\n\ntest_reg_account.py:66: AssertionError"}, "description": "Проверка граничных условий полей для ввода имени, фамилии и пароля", "attachments": [{"name": "log", "source": "c7d4b446-5fc3-47c8-9dc8-aa64d6960565-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "password", "value": "'e$kWq2i+a&cY9bJtB4OI'"}, {"name": "second_name", "value": "'t'"}, {"name": "first_name", "value": "'d'"}], "start": 1640005753867, "stop": 1640005757253, "uuid": "979cde8e-0eb0-42a8-969b-2e27963a2b3e", "historyId": "07515447ce81ace96d0b0a1341fd8eaa", "testCaseId": "bb2220456bb940b18fcd35ce6dab0375", "fullName": "test_reg_account#test_border_conditions", "labels": [{"name": "suite", "value": "test_reg_account"}, {"name": "host", "value": "sis002422"}, {"name": "thread", "value": "4616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_reg_account"}]}