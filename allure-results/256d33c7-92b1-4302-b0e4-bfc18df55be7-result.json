{"name": "test_invalid_email", "status": "failed", "statusDetails": {"message": "AssertionError: (TimeoutException('', None, None), 'Время ожидания alert истекло')", "trace": "self = <UserLoginPage.UserLoginPage object at 0x0000017CA6AF5748>, timeout = 1\n\n    def wait_for_alert(self, timeout=2):\n        self.logger.info('Waiting for the alert within {} seconds'.format(timeout))\n        try:\n>           WebDriverWait(self.browser, 2).until(EC.alert_is_present())\n\nBaseClass.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2f5108fae24544c880bf3dda5dfaa5cc\")>, method = <selenium.webdriver.support.expected_conditions.alert_is_present object at 0x0000017CA6B07948>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python_3.7.9\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f5108fae24544c880bf3dda5dfaa5cc\")>, base_url = 'http://172.19.16.142/'\n\n    def test_invalid_email(browser, base_url):\n        new_user = UserLoginPage(browser)\n        new_user.open_reg_account_page(base_url)\n        new_user.fill_in_with_letters(new_user.FIRST_NAME_FIELD)\n        new_user.fill_in_with_letters(new_user.LAST_NAME_FIELD)\n        new_user.enter_email(email=\"mailbox.com\")\n        new_user.enter_telephone()\n        new_user.enter_and_confirm_password()\n        new_user.find_web_element(new_user.PRIVACY_POLICY_CHECKBOX).click()\n        new_user.wait_and_click(new_user.SUBMIT_CONTINUE_BUTTON)\n>       new_user.wait_for_alert(timeout=1)\n\ntest_reg_account.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <UserLoginPage.UserLoginPage object at 0x0000017CA6AF5748>, timeout = 1\n\n    def wait_for_alert(self, timeout=2):\n        self.logger.info('Waiting for the alert within {} seconds'.format(timeout))\n        try:\n            WebDriverWait(self.browser, 2).until(EC.alert_is_present())\n            self.browser.switch_to.alert.accept()\n        except TimeoutException as time_is_up:\n            self.logger.error(\"Alert did not appear\")\n            self.browser.save_screenshot(self.screenshot_name)\n>           raise AssertionError(time_is_up, \"Время ожидания alert истекло\")\nE           AssertionError: (TimeoutException('', None, None), 'Время ожидания alert истекло')\n\nBaseClass.py:188: AssertionError"}, "attachments": [{"name": "log", "source": "6bfa51d5-1e36-431f-852a-7f93a81ca65c-attachment.txt", "type": "text/plain"}], "start": 1640088990075, "stop": 1640088995071, "uuid": "3eda8597-c11c-42f6-af1d-7ced0bb49662", "historyId": "70df5d34cd288d09831aac13091f1a25", "testCaseId": "f4b875f38472ec8c30f31a4608e91789", "fullName": "test_reg_account#test_invalid_email", "labels": [{"name": "suite", "value": "test_reg_account"}, {"name": "host", "value": "sis002422"}, {"name": "thread", "value": "3224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_reg_account"}]}